// <auto-generated />
using System;
using AgrisysAirFeedingSystem.Models.DB;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AgrisysAirFeedingSystem.Migrations
{
    [DbContext(typeof(AgrisysDbContext))]
    partial class AgrisysDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.14");

            modelBuilder.Entity("AgrisysAirFeedingSystem.Models.DBModels.Area", b =>
                {
                    b.Property<int>("AreaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("AreaId");

                    b.ToTable("Areas");
                });

            modelBuilder.Entity("AgrisysAirFeedingSystem.Models.DBModels.Entity", b =>
                {
                    b.Property<int>("EntityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("EntityType")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(0);

                    b.Property<int>("GroupId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("EntityId");

                    b.HasIndex("GroupId");

                    b.ToTable("Entities");
                });

            modelBuilder.Entity("AgrisysAirFeedingSystem.Models.DBModels.Event", b =>
                {
                    b.Property<int>("EventId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("EditLevel")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(0);

                    b.Property<int>("EntityId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("EventDesc")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("EventId");

                    b.HasIndex("EntityId");

                    b.ToTable("Events");
                });

            modelBuilder.Entity("AgrisysAirFeedingSystem.Models.DBModels.Farm", b =>
                {
                    b.Property<int>("FarmId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Owner")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("FarmId");

                    b.ToTable("Farms");
                });

            modelBuilder.Entity("AgrisysAirFeedingSystem.Models.DBModels.FeedingTime", b =>
                {
                    b.Property<int>("FeedingTimeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AreaID")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Time")
                        .HasColumnType("TEXT");

                    b.HasKey("FeedingTimeId");

                    b.HasIndex("AreaID");

                    b.ToTable("FeedingTimes");
                });

            modelBuilder.Entity("AgrisysAirFeedingSystem.Models.DBModels.Group", b =>
                {
                    b.Property<int>("GroupId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("GroupType")
                        .HasColumnType("INTEGER");

                    b.HasKey("GroupId");

                    b.ToTable("Groups");
                });

            modelBuilder.Entity("AgrisysAirFeedingSystem.Models.DBModels.Mixture", b =>
                {
                    b.Property<int>("MixtureId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("FirstSiloId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SecondSiloId")
                        .HasColumnType("INTEGER");

                    b.HasKey("MixtureId");

                    b.HasIndex("FirstSiloId");

                    b.HasIndex("SecondSiloId");

                    b.ToTable("Mixtures");
                });

            modelBuilder.Entity("AgrisysAirFeedingSystem.Models.DBModels.MixtureSetpoint", b =>
                {
                    b.Property<int>("MixtureSetpointId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("MixtureId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SetPoint")
                        .HasColumnType("INTEGER");

                    b.Property<int>("age")
                        .HasColumnType("INTEGER");

                    b.HasKey("MixtureSetpointId");

                    b.HasIndex("MixtureId");

                    b.ToTable("MixtureSetpoints");
                });

            modelBuilder.Entity("AgrisysAirFeedingSystem.Models.DBModels.Sensor", b =>
                {
                    b.Property<int>("SensorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("EntityId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("SensorId");

                    b.HasIndex("EntityId");

                    b.ToTable("Sensors");
                });

            modelBuilder.Entity("AgrisysAirFeedingSystem.Models.DBModels.SensorMeasurement", b =>
                {
                    b.Property<int>("MeasurementId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("SensorId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("TimeStamp")
                        .HasColumnType("TEXT");

                    b.Property<int>("Value")
                        .HasColumnType("INTEGER");

                    b.HasKey("MeasurementId");

                    b.HasIndex("SensorId");

                    b.ToTable("Measurements");
                });

            modelBuilder.Entity("AgrisysAirFeedingSystem.Models.DBModels.Silo", b =>
                {
                    b.Property<int>("SiloId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AfterRun")
                        .HasColumnType("INTEGER");

                    b.Property<int>("AlarmMin")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("AlternativeSiloId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Capacity")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MixingTime")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TransferSpeed")
                        .HasColumnType("INTEGER");

                    b.HasKey("SiloId");

                    b.HasIndex("AlternativeSiloId");

                    b.ToTable("Silos");
                });

            modelBuilder.Entity("AgrisysAirFeedingSystem.Models.DBModels.Target", b =>
                {
                    b.Property<int>("TargetId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AreaID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("BeforeClose")
                        .HasColumnType("INTEGER");

                    b.Property<int>("BeforeOpen")
                        .HasColumnType("INTEGER");

                    b.Property<int>("BlowerStrength")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Cellesluse")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MixtureId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PressureAlarm")
                        .HasColumnType("INTEGER");

                    b.Property<int>("pigAge")
                        .HasColumnType("INTEGER");

                    b.Property<int>("pigCount")
                        .HasColumnType("INTEGER");

                    b.HasKey("TargetId");

                    b.HasIndex("AreaID");

                    b.HasIndex("MixtureId");

                    b.ToTable("Target");
                });

            modelBuilder.Entity("AgrisysAirFeedingSystem.Models.DBModels.Entity", b =>
                {
                    b.HasOne("AgrisysAirFeedingSystem.Models.DBModels.Group", "Group")
                        .WithMany("Entities")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Group");
                });

            modelBuilder.Entity("AgrisysAirFeedingSystem.Models.DBModels.Event", b =>
                {
                    b.HasOne("AgrisysAirFeedingSystem.Models.DBModels.Entity", "Entity")
                        .WithMany("Events")
                        .HasForeignKey("EntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Entity");
                });

            modelBuilder.Entity("AgrisysAirFeedingSystem.Models.DBModels.FeedingTime", b =>
                {
                    b.HasOne("AgrisysAirFeedingSystem.Models.DBModels.Area", "Area")
                        .WithMany("FeedingTimes")
                        .HasForeignKey("AreaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Area");
                });

            modelBuilder.Entity("AgrisysAirFeedingSystem.Models.DBModels.Mixture", b =>
                {
                    b.HasOne("AgrisysAirFeedingSystem.Models.DBModels.Silo", "FirstSilo")
                        .WithMany()
                        .HasForeignKey("FirstSiloId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AgrisysAirFeedingSystem.Models.DBModels.Silo", "SecondSilo")
                        .WithMany()
                        .HasForeignKey("SecondSiloId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FirstSilo");

                    b.Navigation("SecondSilo");
                });

            modelBuilder.Entity("AgrisysAirFeedingSystem.Models.DBModels.MixtureSetpoint", b =>
                {
                    b.HasOne("AgrisysAirFeedingSystem.Models.DBModels.Mixture", "Mixture")
                        .WithMany("Setpoints")
                        .HasForeignKey("MixtureId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Mixture");
                });

            modelBuilder.Entity("AgrisysAirFeedingSystem.Models.DBModels.Sensor", b =>
                {
                    b.HasOne("AgrisysAirFeedingSystem.Models.DBModels.Entity", "Entity")
                        .WithMany("Sensors")
                        .HasForeignKey("EntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Entity");
                });

            modelBuilder.Entity("AgrisysAirFeedingSystem.Models.DBModels.SensorMeasurement", b =>
                {
                    b.HasOne("AgrisysAirFeedingSystem.Models.DBModels.Sensor", "Sensor")
                        .WithMany("SensorValues")
                        .HasForeignKey("SensorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Sensor");
                });

            modelBuilder.Entity("AgrisysAirFeedingSystem.Models.DBModels.Silo", b =>
                {
                    b.HasOne("AgrisysAirFeedingSystem.Models.DBModels.Silo", "AlternativeSilo")
                        .WithMany()
                        .HasForeignKey("AlternativeSiloId");

                    b.Navigation("AlternativeSilo");
                });

            modelBuilder.Entity("AgrisysAirFeedingSystem.Models.DBModels.Target", b =>
                {
                    b.HasOne("AgrisysAirFeedingSystem.Models.DBModels.Area", "Area")
                        .WithMany("Targets")
                        .HasForeignKey("AreaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AgrisysAirFeedingSystem.Models.DBModels.Mixture", "Mixture")
                        .WithMany("UsedForTargets")
                        .HasForeignKey("MixtureId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Area");

                    b.Navigation("Mixture");
                });

            modelBuilder.Entity("AgrisysAirFeedingSystem.Models.DBModels.Area", b =>
                {
                    b.Navigation("FeedingTimes");

                    b.Navigation("Targets");
                });

            modelBuilder.Entity("AgrisysAirFeedingSystem.Models.DBModels.Entity", b =>
                {
                    b.Navigation("Events");

                    b.Navigation("Sensors");
                });

            modelBuilder.Entity("AgrisysAirFeedingSystem.Models.DBModels.Group", b =>
                {
                    b.Navigation("Entities");
                });

            modelBuilder.Entity("AgrisysAirFeedingSystem.Models.DBModels.Mixture", b =>
                {
                    b.Navigation("Setpoints");

                    b.Navigation("UsedForTargets");
                });

            modelBuilder.Entity("AgrisysAirFeedingSystem.Models.DBModels.Sensor", b =>
                {
                    b.Navigation("SensorValues");
                });
#pragma warning restore 612, 618
        }
    }
}
