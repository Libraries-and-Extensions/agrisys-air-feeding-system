@using AgrisysAirFeedingSystem.Models.DBModels
@using AgrisysAirFeedingSystem.Utils.LiveUpdate.Handler
@model EventListViewModel

@{
	ViewBag.Title = "Event Log";
	Layout = "_Layout";
}

<h1>@ViewBag.Title</h1>

<form id="eventFilter" asp-action="Index" class="d-flex gap-3">
  <select asp-for="Level" name="level" class="form-select w-auto ms-auto" aria-label="Default select example">
    @foreach (var val in Enum.GetValues(typeof(EditLevel)))
    {
      <option>@val.ToString()</option>
    }
  </select>
  <button type="submit" class="btn btn-primary">submit</button>
</form>

<table class="table" id="eventTable" hub-name="/EventsHub">
  <thead>
  <tr>
    <th scope="col">#</th>
    <th scope="col">Event Level</th>
    <th scope="col">Entity Name</th>
    <th scope="col">Description</th>
  </tr>
  </thead>
  <tbody>
  @foreach (var eventEntry in Model.Events)
  {
    <tr class="@GetEventClass(eventEntry.EditLevel)">
      <th scope="row">@(++i)</th>
      <td>@eventEntry.EditLevel</td>
      <td>@eventEntry.Entity.Name</td>
      <td>@eventEntry.EventDesc</td>
    </tr>
  }
  </tbody>
</table>

@functions
{
  private int i;
  
  private static string GetEventClass(EditLevel level)
  {
    return level switch
    {
      EditLevel.Info => "",
      EditLevel.Warning => "text-warning",
      EditLevel.Error => "text-danger",
      _ => throw new ArgumentOutOfRangeException(nameof(level), level, null)
    };
  }
}

@section Scripts
{
  <script type="text/javascript">
    let levelCSS = [
      "",
      "text-warning",
      "text-danger"
    ]
    
    let levelOptions = [
       "Info",
       "Warning",
       "Error"
    ]
    
    let eventTable = document.getElementById("eventTable");
   
    let tableBody = eventTable.children[1]
    
    let index = +tableBody.children[tableBody.children.length-1].children[0].innerText 
    
    console.log(index)
    
    
    function simpleCreateElement(tag,value){
        let element = document.createElement(tag)
            
        element.innerText = value;
        return element
    }
    
    eventTable.addEventListener("valueUpdate",evt => {
         console.log(evt)
      
      let root = document.createElement("tr")
      root.classList.add(levelCSS[evt.detail.level]);
      
 
       let numbering = simpleCreateElement("th",++index);
       numbering.setAttribute("scope","row");
      
      root.appendChild(numbering);
      root.appendChild(simpleCreateElement("td",levelOptions[evt.detail.level]));
      root.appendChild(simpleCreateElement("td",evt.detail.entityName));
      root.appendChild(simpleCreateElement("td",evt.detail.formatted));
      
      tableBody.appendChild(root)
    })
  </script>
  @{ await Html.RenderPartialAsync("_LiveUpdateScripts"); }

}
